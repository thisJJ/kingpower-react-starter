{"version":3,"file":"0.5bd354b1ed40b7bc53f7.hot-update.js","sources":["webpack:///src/actions/index.js","webpack:///src/config/store.js","webpack:///src/reducers/counter.js","webpack:///src/reducers/index.js","webpack:///src/routes.js","webpack:///src/sagas/counter.js","webpack:///src/server.js","webpack:///external \"react-redux\"","webpack:///external \"redux\""],"sourcesContent":["export const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport const DECREMENT_COUNTER_SUCCESS = 'DECREMENT_COUNTER_SUCCESS';\n\nexport const increment = () => ({\n  type: INCREMENT_COUNTER,\n});\n\nexport const decrement = () => ({\n  type: DECREMENT_COUNTER,\n});\n\nexport const decrementSuccess = (count) => ({\n  type: DECREMENT_COUNTER_SUCCESS,\n  count\n});\n\nexport const incrementAsync = (delay = 1000) => dispatch => {\n  setTimeout(() => {\n    dispatch(increment());\n  }, delay);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/actions/index.js","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport createSagaMiddleware from 'redux-saga'\nimport mainSaga from '~/sagas'\nimport rootReducer from '~/reducers'\n\nexport default (initialState = {}) => {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const configuredStore = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  )\n  configuredStore.sagaTask = sagaMiddleware.run(mainSaga)\n\n  return configuredStore\n}\n\n\n// WEBPACK FOOTER //\n// src/config/store.js","import { INCREMENT_COUNTER, DECREMENT_COUNTER, DECREMENT_COUNTER_SUCCESS } from '../actions';\n\nconst initialState = {\n  count : 0\n}\n\nexport default (state = {...initialState}, action) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { \n        count: state.count + 1 \n      }\n    case DECREMENT_COUNTER:\n      return {\n        ...state\n      }\n    case DECREMENT_COUNTER_SUCCESS:\n      state.count -= action.count\n      return {\n        ...state\n      }\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/counter.js","import { combineReducers } from 'redux';\nimport counter from './counter';\n\nconst rootReducer = combineReducers({\n  counter,\n});\n\nexport default rootReducer;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/index.js","// import App from '~/containers/App/container'\n// // import About from '~/containers/About/container'\n// export default [\n//   {\n//     path: '/',\n//     component: App,\n//   },\n//   // {\n//   //   path: '/:about',\n//   //   component: App,\n//   // },\n//   // {\n//   //   path: '/:about/:conponent',\n//   //   component: App,\n//   // },\n// ];\n\n\n\n// WEBPACK FOOTER //\n// src/routes.js","import { takeEvery, put } from 'redux-saga/effects'\nimport { DECREMENT_COUNTER, decrementSuccess } from '../actions'\n\nexport function* counter () {\n  yield put(decrementSuccess(1));\n}\n\nexport default function* counterSaga() {\n  yield takeEvery(DECREMENT_COUNTER, counter)\n}\n\n\n\n// WEBPACK FOOTER //\n// src/sagas/counter.js","import React from 'react';\nimport express from 'express';\nimport { render } from '@jaredpalmer/after';\nimport { Provider } from 'react-redux';\nimport routes from '~/routes';\nimport { renderToString } from 'react-dom/server';\n// import qs from 'qs';\nimport Document from '~/Document';\nimport configureStore from '~/config/store';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', async (req, res) => {\n    try {\n      // Read the counter from the request, if provided\n      // const params = qs.parse(req.query);\n      // console.log(req)\n      // console.log(res)\n      // const counter = parseInt(params.counter, 10) || 0;\n\n      // Compile initial state\n      const preloadedState = {};\n\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n\n      // Grab the initial state from our Redux store\n      const serverState = store.getState();\n\n      const customRenderer = (node) => {\n        const App = <Provider store={store}>{node}</Provider>;\n        return {\n          html: renderToString(App),\n          // Anything else you add here will be made available\n          // within document's this.props\n          // e.g a redux store...\n          serverState,\n        };\n      };\n\n      const html = await render({\n        req,\n        res,\n        routes,\n        assets,\n        document: Document,\n        customRenderer,\n      });\n      res.send(html);\n    } catch (error) {\n      res.json(error);\n    }\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// src/server.js","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = react-redux\n// module chunks = 0","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = redux\n// module chunks = 0"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAfA;AAiBA;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AAIA;AACA;AARA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AA3BA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA7BA;AA4BA;AACA;AAOA;AApCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqCA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AA4CA;;;;;;;;;;;;;;;;ACzDA;;;;;;;;;;ACAA;;;;A","sourceRoot":""}