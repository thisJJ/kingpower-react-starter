{"version":3,"file":"0.f2af3748b916a67b0485.hot-update.js","sources":["webpack:///src/Document.js","webpack:///src/server.js"],"sourcesContent":["import React from 'react';\r\nimport { AfterRoot, AfterData } from '@jaredpalmer/after';\r\n\r\nimport serialize from 'serialize-javascript';\r\n\r\nclass CustomDocument extends React.Component {\r\n  static async getInitialProps({ assets, data, renderPage }) {\r\n    const page = await renderPage();\r\n    return { assets, data, ...page };\r\n  }\r\n\r\n  render() {\r\n    const { helmet, assets, data, serverState } = this.props;\r\n\r\n    // get attributes from React Helmet\r\n    const htmlAttrs = helmet.htmlAttributes.toComponent();\r\n    const bodyAttrs = helmet.bodyAttributes.toComponent();\r\n    return (\r\n      <html {...htmlAttrs}>\r\n        <head>\r\n          <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n          <meta charSet=\"utf-8\" />\r\n          <title>React Rezzle After Antd Saga</title>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          {helmet.title.toComponent()}\r\n          {helmet.meta.toComponent()}\r\n          {helmet.link.toComponent()}\r\n          {assets.client.css && (\r\n            <link rel=\"stylesheet\" href={assets.client.css} />\r\n          )}\r\n          {process.env.NODE_ENV === 'production' ? (\r\n            <span\r\n              dangerouslySetInnerHTML={{\r\n                __html: `<script src=\"${assets.client.js}\" defer></script>`,\r\n              }}\r\n            />\r\n          ) : (\r\n            <span\r\n              dangerouslySetInnerHTML={\r\n                { __html: `<script src=\"${assets.client.js}\" defer crossorigin></script>` } // prettier-ignore\r\n              }\r\n            />\r\n          )}\r\n        </head>\r\n        <body {...bodyAttrs}>\r\n          <AfterRoot />\r\n          <AfterData data={data} />\r\n          <span\r\n            dangerouslySetInnerHTML={\r\n              { __html: `<script>window.__PRELOADED_STATE__ = ${serialize(serverState)}</script>` } // prettier-ignore\r\n            }\r\n          />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomDocument;\r\n\n\n\n// WEBPACK FOOTER //\n// src/Document.js","import React from 'react';\nimport express from 'express';\nimport { render } from '@jaredpalmer/after';\nimport { Provider } from 'react-redux';\nimport routes from './routes';\nimport { renderToString } from 'react-dom/server';\n// import qs from 'qs';\nimport Html from './Document';\nimport configureStore from './store/configuredStore';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', async (req, res) => {\n    try {\n      // Read the counter from the request, if provided\n      // const params = qs.parse(req.query);\n      // console.log(req)\n      // console.log(res)\n      // const counter = parseInt(params.counter, 10) || 0;\n\n      // Compile initial state\n      const preloadedState = {};\n\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n\n      // Grab the initial state from our Redux store\n      const serverState = store.getState();\n\n      const customRenderer = (node) => {\n        const App = <Provider store={store}>{node}</Provider>;\n        return {\n          html: renderToString(App),\n          // Anything else you add here will be made available\n          // within document's this.props\n          // e.g a redux store...\n          serverState,\n        };\n      };\n\n      const html = await render({\n        req,\n        res,\n        routes,\n        assets,\n        document: Html,\n        customRenderer,\n      });\n      res.send(html);\n    } catch (error) {\n      res.json(error);\n    }\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// src/server.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAHA;AA1BA;AAqCA;;;;;AAjDA;AAAA;AAAA;;;;;;;AACA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;;;;;;AAJA;AACA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AA3BA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA7BA;AA4BA;AACA;AAOA;AApCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqCA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AA4CA;;;;A","sourceRoot":""}